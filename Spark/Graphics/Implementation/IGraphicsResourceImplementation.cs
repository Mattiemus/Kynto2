namespace Spark.Graphics.Implementation
{
    using System;
        
    /// <summary>
    /// Defines a platform-specific graphics resource implementation that is created by a factory registered to a render system and is bound to a graphics resource.
    /// </summary>
    public interface IGraphicsResourceImplementation : IDisposable, INamable
    {
        /// <summary>
        /// Gets if the resource has been disposed or not.
        /// </summary>
        bool IsDisposed { get; }

        /// <summary>
        /// Gets the unique ID of the resource, generated by the render system.
        /// </summary>
        int ResourceId { get; }

        /// <summary>
        /// Gets the render system that created and manages this resource.
        /// </summary>
        IRenderSystem RenderSystem { get; }

        /// <summary>
        /// Gets the graphics resource parent that this implementation is bound to.
        /// </summary>
        GraphicsResource Parent { get; }

        /// <summary>
        /// Called by the parent graphics resource when the implementation is first created. This only should be called once, during the creation of
        /// a graphics resource, and not by the user.
        /// </summary>
        /// <param name="resource">Graphics resource that is to be bound to this implementation</param>
        void BindImplementation(GraphicsResource resource);
    }
}
